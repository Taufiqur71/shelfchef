name: Run Tests

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:5.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongo --eval 'db.runCommand({ ping: 1 })'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio httpx
    
    - name: Run tests
      working-directory: ./backend
      env:
        MONGO_URL: mongodb://localhost:27017
        DB_NAME: test_shelfchef
      run: python -m pytest tests/ -v --tb=short
    
    - name: Test API endpoints
      working-directory: ./backend
      env:
        MONGO_URL: mongodb://localhost:27017
        DB_NAME: test_shelfchef
      run: |
        python -m uvicorn server:app --host 0.0.0.0 --port 8000 &
        sleep 5
        curl -f http://localhost:8000/api/health
        curl -f http://localhost:8000/api/
        curl -X POST -H "Content-Type: application/json" -d '{"ingredients": "chicken, rice"}' http://localhost:8000/api/generate-recipes

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'yarn'
        cache-dependency-path: frontend/yarn.lock
    
    - name: Install dependencies
      working-directory: ./frontend
      run: yarn install --frozen-lockfile
    
    - name: Run tests
      working-directory: ./frontend
      run: yarn test --coverage --watchAll=false
    
    - name: Build application
      working-directory: ./frontend
      run: yarn build
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./frontend/coverage/lcov.info
        flags: frontend
        name: frontend-coverage